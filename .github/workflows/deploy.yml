name: CD Deploy

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Docker container via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.USER }}@${{ secrets.HOST }} "
            set -e

            APP_NAME=my-static-site
            IMAGE_NAME=ghcr.io/darktezi/static-website-example:latest
            CONTAINER_NAME=my_static_site_container

            echo 'üì¶ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ GHCR...'
            echo '${{ secrets.TOKEN }}' | docker login ghcr.io -u Darktezi --password-stdin

            echo '‚¨áÔ∏è –¢—è–Ω–µ–º —Å–≤–µ–∂–∏–π Docker-–æ–±—Ä–∞–∑...'
            docker pull \$IMAGE_NAME

            echo 'üßπ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å)...'
            docker stop \$CONTAINER_NAME || true
            docker rm \$CONTAINER_NAME || true

            echo 'üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...'
            docker run -d \
              --name \$CONTAINER_NAME \
              -p 80:80 \
              --restart always \
              \$IMAGE_NAME

            echo '‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω. –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω:'
            docker ps --filter name=\$CONTAINER_NAME
          "
